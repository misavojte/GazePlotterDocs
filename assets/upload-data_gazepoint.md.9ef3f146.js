import{_ as t,o as a,c as e,N as o}from"./chunks/framework.7e203a6d.js";const h=JSON.parse('{"title":"GazePoint Analysis export and upload","description":"","frontmatter":{},"headers":[],"relativePath":"upload-data/gazepoint.md"}'),s={name:"upload-data/gazepoint.md"},n=o('<h1 id="gazepoint-analysis-export-and-upload" tabindex="-1">GazePoint Analysis export and upload <a class="header-anchor" href="#gazepoint-analysis-export-and-upload" aria-label="Permalink to &quot;GazePoint Analysis export and upload&quot;">â€‹</a></h1><p>GazePlotter supports the upload of data from the GazePoint Analysis eye-tracking software.</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>GazePoint export doesn&#39;t support dynamic AOI visibility information.</p></div><p>In the GazePoint Analysis software, select <code>Analyze Data &gt; Export &gt; Select CSV Data</code>. Then click <code>Export CSV data</code> to export the data.</p><p>User data is then exported into multiple CSV format of two types, XXXX-user.csv and XXXX-user-fix.csv. To GazePlotter, only the XXXX-user.csv file is important - select all of them after clicking <code>Upload data</code> button (see <a href="/basic/">GazePlotter GUI overview</a>.</p>',5),i=[n];function r(p,l,d,c,_,u){return a(),e("div",null,i)}const m=t(s,[["render",r]]);export{h as __pageData,m as default};
