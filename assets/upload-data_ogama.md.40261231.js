import{_ as e,o as t,c as a,N as o}from"./chunks/framework.7e203a6d.js";const _=JSON.parse('{"title":"OGAMA upload","description":"","frontmatter":{},"headers":[],"relativePath":"upload-data/ogama.md"}'),i={name:"upload-data/ogama.md"},l=o('<h1 id="ogama-upload" tabindex="-1">OGAMA upload <a class="header-anchor" href="#ogama-upload" aria-label="Permalink to &quot;OGAMA upload&quot;">​</a></h1><p>GazePlotter supports the upload of data from the <a href="https://ogama.net" target="_blank" rel="noreferrer">OGAMA</a> eye-tracking software.</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>Big limitation of OGAMA export is support only for ordinal type of timeline (see <a href="/basic/timelines.html">Timelines</a>) in interactive scarf plots. OGAMA doesn&#39;t support dynamic AOI visibility information.</p></div><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>OGAMA export doesn&#39;t support dynamic AOI visibility information.</p></div><h2 id="export-upload" tabindex="-1">Export &amp; upload <a class="header-anchor" href="#export-upload" aria-label="Permalink to &quot;Export &amp; upload&quot;">​</a></h2><p>In the OGAMA software, select:</p><ol><li><code>Scanpath Module</code></li><li><code>Check to display Levenshtein Distance calculation tools</code></li><li><code>Use Areas of Interest to divide the stimulus picture into subsequences</code></li><li><code>Export similarity measurements to data sheet</code></li><li><code>Sequence Similarity</code></li></ol><p>Then click <code>OK</code> to export the data.</p><p>Select the exported file after clicking <code>Upload data</code> button (see more information in <a href="/basic/">GazePlotter GUI overview</a>) in to start the upload and visualization.</p>',9),s=[l];function r(c,n,d,p,u,m){return t(),a("div",null,s)}const f=e(i,[["render",r]]);export{_ as __pageData,f as default};
